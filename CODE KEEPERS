############################################################
############################################################

'use strict';
module.exports = (sequelize, DataTypes) => {
  const UserPhoneCodeAuthTable = sequelize.define('UserPhoneCodeAuthTable', {
    user_guid: DataTypes.STRING,
    phone_number: DataTypes.STRING,
    confirmation_code: DataTypes.STRING,
    auth_token: DataTypes.STRING
  }, {});
//   UserPhoneCodeAuthTable.associate = function(models) {
//     // associations can be defined here
//   };
  return UserPhoneCodeAuthTable;
};


#################################################################
#################################################################

'use strict';
module.exports = {
  up: (queryInterface, Sequelize) => {
    return queryInterface.createTable('UserPhoneCodeAuthTable', {
      user_guid: {
        allowNull: false,
        primaryKey: true,
        type: Sequelize.STRING
      },
      phone_number: {
        allowNull: false,
        type: Sequelize.STRING
      },
      confirmation_code: {
        allowNull: false,
        type: Sequelize.STRING
      },
      auth_token: {
        allowNull: false,
        type: Sequelize.STRING
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE
      }
    });
  },
  down: (queryInterface, Sequelize) => {
    return queryInterface.dropTable('UserPhoneCodeAuthTable');
  }
};

############################################################
############################################################

  async create(req, res) {

    console.log("BODY:");
    console.log(req.body);

    const password = await token.tokenize(req.body.password)

    var user = await User
      .create({
        email: req.body.email,
        first_name: req.body.first_name,
        password: password,
        phone_number: req.body.phone_number,
        random_field: req.body.random_field,
      })

      res.status(201).send(user)

      return user
      // .catch(error => res.status(400).send(error))

  },
